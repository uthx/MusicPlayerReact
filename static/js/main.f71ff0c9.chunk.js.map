{"version":3,"sources":["utils.js","components/Player.js","components/Song.js","components/LibrarySongs.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","Player","currentSong","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","useEffect","newSongsObj","map","el","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","song","newIndex","indexHandler","length","totalLength","className","currentTime","min","max","duration","value","type","onChange","e","target","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySongs","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","color","uuidv4","App","useRef","useState","data","timeUpdateHandler","onTimeUpdate","ref","onLoadedMetadata","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f71ff0c9.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\r\n  if (isPlaying) {\r\n    const playPromise = audioRef.current.play();\r\n    //console.log(\"print from promise thing \" + playPromise);\r\n    if (playPromise !== undefined) {\r\n      playPromise.then((audio) => {\r\n        audioRef.current.play();\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n//create repo\r\n//git init in local codebase\r\n//linking this with online repo git remote add origin https://github.com/uthx/MusicPlayerReact.git\r\n","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlay,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { playAudio } from \"../utils\";\r\n//display music player basic controls\r\nconst Player = ({\r\n  currentSong,\r\n  setIsPlaying,\r\n  isPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  //useEffect this function will run every time currentSong state is updated\r\n  useEffect(() => {\r\n    const newSongsObj = songs.map((el) => {\r\n      if (el.id === currentSong.id) {\r\n        return {\r\n          ...el,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...el,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongsObj);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentSong]);\r\n  //methods\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  //timeUpdateHandler is gonna handle the timer value which is showing on the range\r\n  //it uses onTimeUpdate Event which fires auto when the song plays\r\n\r\n  //getTime will format the time\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  //it will handle the drag of the input slider\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = (direction) => {\r\n    //trying to find the index of the current song\r\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    //finding the new index as per the button pressed forward or backward\r\n    const newIndex = indexHandler(currentIndex, direction, songs.length);\r\n    setCurrentSong(songs[newIndex]);\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  //this function will return the index of the song according to the direction instruction\r\n  const indexHandler = (currentIndex, direction, totalLength) => {\r\n    if (direction === \"skipBack\") {\r\n      return currentIndex - 1 < 0 ? totalLength - 1 : currentIndex - 1;\r\n    } else {\r\n      return (currentIndex + 1) % totalLength;\r\n    }\r\n  };\r\n\r\n  //state\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          type=\"range\"\r\n          onChange={dragHandler}\r\n        />\r\n        <p>{getTime(songInfo.duration)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          className=\"skip-back\"\r\n          onClick={() => skipTrackHandler(\"skipBack\")}\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"play\"\r\n          onClick={playSongHandler}\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          onClick={() => skipTrackHandler(\"skipForward\")}\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\n//Display Song Details\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { playAudio } from \"../utils\";\r\n\r\n//Display Song Details\r\nconst LibrarySongs = ({\r\n  song,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  //changing color of the songs when clicked\r\n  const songSelectHandler = () => {\r\n    setCurrentSong(song);\r\n    //change active state\r\n    const newSongsObj = songs.map((el) => {\r\n      if (el.id === song.id) {\r\n        return {\r\n          ...el,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...el,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongsObj);\r\n    //check if the song is playing\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  return (\r\n    <div\r\n      className={`library-songs ${song.active ? \"selected\" : \"\"}`}\r\n      onClick={songSelectHandler}\r\n    >\r\n      <img alt={song.name} src={song.cover} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySongs;\r\n","import React from \"react\";\r\nimport LibrarySongs from \"./LibrarySongs\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"lib\">\r\n        {songs.map((song) => (\r\n          <LibrarySongs\r\n            songs={songs}\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"ny90\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/12/7e98d3028a22ee7f16f6a9bfcdc2089f089777a5-1024x1024.jpg\",\r\n      artist: \"Ezzy\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9331\",\r\n      color: [\"#2C2F66\", \"#803530\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Far From Home\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/12/7e98d3028a22ee7f16f6a9bfcdc2089f089777a5-1024x1024.jpg\",\r\n      artist: \"Toonorth\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8127\",\r\n      color: [\"#2C2F66\", \"#803530\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Going Back\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/10/737bb830d34592344eb4a2a1d2c006cdbfc811d9-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\r\n      color: [\"#335561\", \"#293660\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Hereafter\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n      artist: \"Makzo\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11770\",\r\n      color: [\"#5368A3\", \"#FEE476\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Sleepover\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n      artist: \"Nymano,JK the Sage\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10130\",\r\n      color: [\"#7A668D\", \"#936C8C\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Imagination\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/24bd0da848d9718fd19af104ff5c0b11f914cb25-1024x1024.jpg\",\r\n      artist: \"Montell Fish\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9332\",\r\n      color: [\"#EAB4A1\", \"#AD455E\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Hereafter\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n      artist: \"Makzo\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11770\",\r\n      color: [\"#5368A3\", \"#FEE476\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Sleepover\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n      artist: \"Nymano,JK the Sage\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10130\",\r\n      color: [\"#7A668D\", \"#936C8C\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","//import styles\nimport { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n\n//adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//import utils\nimport data from \"./data\";\n\nfunction App() {\n  //state\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  // libraryStatus is the library toggle status\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  //methods\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        src={currentSong.audio}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        onLoadedMetadata={timeUpdateHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}